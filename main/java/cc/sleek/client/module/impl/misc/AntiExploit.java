package cc.sleek.client.module.impl.misc;

import cc.sleek.client.event.impl.PacketEvent;
import cc.sleek.client.module.Module;
import cc.sleek.client.module.api.Category;
import cc.sleek.client.module.api.ModuleInfo;
import cc.sleek.client.property.impl.BooleanValue;
import cc.sleek.client.util.ChatUtil;
import cc.sleek.client.util.IPacketUtil;
import io.github.nevalackin.homoBus.Listener;
import io.github.nevalackin.homoBus.annotations.EventLink;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C19PacketResourcePackStatus;
import net.minecraft.network.play.server.*;
import net.minecraft.util.ChatComponentText;

import java.net.URI;
import java.net.URISyntaxException;

/**
 * @author Kansio
 */
@ModuleInfo(name = "Anti Exploit", description = "Prevents malicious servers from exploiting/crashing your client", category = Category.MISC, visibility = false)
public class AntiExploit extends Module {

    private final BooleanValue dcOnCrash = new BooleanValue("Disconnect on crash attempt", true);
    private final BooleanValue dcOnExploit = new BooleanValue("Disconnect on exploit attempt", true);

    @EventLink
    private final Listener<PacketEvent> eventListener = event -> {
        Packet receivedPacket = event.getPacket();

        if (event.getPacket() instanceof S27PacketExplosion) {
            S27PacketExplosion packet = event.getPacket();

            //large explosion packets can crash the client (crash exploit from github.com/Kansioo/Carbon)
            if (Math.abs(packet.func_149144_d()) > 100 || Math.abs(packet.func_149147_e()) > 100 || Math.abs(packet.func_149149_c()) > 100) {
                event.setCancelled(true);

                ChatUtil.logNoPrefix("§c[Anti Exploit] §fLarge explosion packet received, packet has been cancelled");

                if (dcOnCrash.getValue())
                    mc.getNetHandler().getNetworkManager().closeChannel(new ChatComponentText("§c[Sleek Anti Exploit]\n§7You were automatically disconnected from the server due to the server attempting to crash your client!"));
            } else if (Math.abs(packet.getStrength()) > 100) {
                event.setCancelled(true);

                ChatUtil.logNoPrefix("§c[Anti Exploit] §fLarge explosion packet received, packet has been cancelled");

                if (dcOnCrash.getValue())
                    mc.getNetHandler().getNetworkManager().closeChannel(new ChatComponentText("§c[Sleek Anti Exploit]\n§7You were automatically disconnected from the server due to the server attempting to crash your client!"));
            }
        }

        //from sk1er's resource pack exploit fix
        else if (event.getPacket() instanceof S48PacketResourcePackSend) {
            S48PacketResourcePackSend packet = event.getPacket();
            try {
                URI uri = new URI(packet.getURL());
                String scheme = uri.getScheme();
                boolean isLevelProtocol = "level".equalsIgnoreCase(scheme);
                boolean isHttpProtocol = "http".equalsIgnoreCase(scheme);
                boolean isHttpsProtocol = "https".equalsIgnoreCase(scheme);

                if (!isHttpProtocol && !isHttpsProtocol && !isLevelProtocol) {
                    ChatUtil.logNoPrefix("§c[Anti Exploit] §fThis server might have tried to check if a file exists on your computer using an exploit...");
                    IPacketUtil.sendPacket(new C19PacketResourcePackStatus(packet.getHash(), C19PacketResourcePackStatus.Action.FAILED_DOWNLOAD));
                    event.setCancelled(true);

                    if (dcOnExploit.getValue())
                        mc.getNetHandler().getNetworkManager().closeChannel(new ChatComponentText("§c[Sleek Anti Exploit]\n§7You were automatically disconnected from the server due to the server attempting to use an exploit!"));
                }

                if (isLevelProtocol && (packet.getURL().contains("..") || !packet.getURL().endsWith("/resources.zip"))) {
                    ChatUtil.logNoPrefix("§c[Anti Exploit] §fThis server might have tried to check if a file exists on your computer using an exploit...");
                    ChatUtil.logNoPrefix("§c[Anti Exploit] §fTried accessing: §c" + packet.getURL());
                    mc.thePlayer.sendQueue.getNetworkManager().sendPacket(new C19PacketResourcePackStatus(packet.getHash(),
                            C19PacketResourcePackStatus.Action.FAILED_DOWNLOAD));
                    event.setCancelled(true);

                    if (dcOnExploit.getValue())
                        mc.getNetHandler().getNetworkManager().closeChannel(new ChatComponentText("§c[Sleek Anti Exploit]\n§7You were automatically disconnected from the server due to the server attempting to use an exploit!"));
                }

            } catch (URISyntaxException exception) {
                ChatUtil.logNoPrefix("§c[Anti Exploit] §fThis server might have tried to check if a file exists on your computer using an exploit...");
                mc.thePlayer.sendQueue.getNetworkManager().sendPacket(new C19PacketResourcePackStatus(packet.getHash(),
                        C19PacketResourcePackStatus.Action.FAILED_DOWNLOAD));
                event.setCancelled(true);

                if (dcOnExploit.getValue())
                    mc.getNetHandler().getNetworkManager().closeChannel(new ChatComponentText("§c[Sleek Anti Exploit]\n§7You were automatically disconnected from the server due to the server attempting to use an exploit!"));
            }
        }

        else if (event.getPacket() instanceof S2APacketParticles) {
            S2APacketParticles packet = event.getPacket();
            if (Math.abs(packet.getParticleSpeed()) > 10) {
                event.setCancelled(true);
                ChatUtil.logNoPrefix("§c[Anti Exploit] §fLarge particle packet received, packet has been cancelled");

                if (dcOnCrash.getValue())
                    mc.getNetHandler().getNetworkManager().closeChannel(new ChatComponentText("§c[Sleek Anti Exploit]\n§7You were automatically disconnected from the server due to the server attempting to crash your client!"));
            } else if (packet.getParticleCount() > 100) {
                event.setCancelled(true);
                ChatUtil.logNoPrefix("§c[Anti Exploit] §fLarge particle packet received, packet has been cancelled");

                if (dcOnCrash.getValue())
                    mc.getNetHandler().getNetworkManager().closeChannel(new ChatComponentText("§c[Sleek Anti Exploit]\n§7You were automatically disconnected from the server due to the server attempting to crash your client!"));
            }
        }

        //from my crash util
        else if (event.getPacket() instanceof S18PacketEntityTeleport) {
            S18PacketEntityTeleport packet = event.getPacket();

            final int MAX_WORLD_SIZE = 29999984;

            if (Math.abs(packet.getX()) > MAX_WORLD_SIZE || Math.abs(packet.getZ()) > MAX_WORLD_SIZE || Math.abs(packet.getY()) > MAX_WORLD_SIZE) {
                ChatUtil.logNoPrefix("§c[Anti Exploit] §fThe server has tried to crash your game by teleporting you outside of the max world size! The client has kicked you from the server and cancelled teleportation packet.");

                event.setCancelled(true);

                if (dcOnCrash.getValue())
                    mc.getNetHandler().getNetworkManager().closeChannel(new ChatComponentText("§c[Sleek Anti Exploit]\n§7You were automatically disconnected from the server due to the server attempting to crash your client!"));
            }
        }
    };
}
